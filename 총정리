정보처리기사 요약 내용 (1,2) (요약)
1. SLC 소프트웨어 생명주기
 -> 폭포수, 프로토타입,나선형, 애자일, 
 -> 애자일
 1. 스크럼 - 팀단위
 2. XP - 고객이 참여와 개발을 반복 극대화 (의단용존피)
 3. 칸반 
 4. lean
 5. 기능 중심 개발

2. 요구사항 정의 -> 기능, 비기능, 사용자, 시스템 (요구사항)
  
3. 요구사항 개발 프로세스 (요구사항을  도출>분석>명세>확인) / 도분명확
 -> 명세 (정형명세기법 , 비정형명세기법)

4. UML (시스템 개발자와 고객의 의사소통이 원활하게 이루어지도록 표준화한 객체지향 모델링언어)
 - UML의 구성요소 (사물, 관계, 다이어그램)
 - 관계 - 실체화(realization), 연관(association), 일반화(generalization), 의존(dependency), 집합(aggregation), 포함(composition) (실 연 일 의 집 포) 

5. UML- 다이어그램 (사물과 관계를 도형으로 표현)
 - 구조적, 행위 다이어그램
 -> 구조적 (클래스, 객체, 컴포넌트, 배치, 복합체 구조, 패키지 (다이어그램)
 -> 행위 (유스케이스, 순차, 커뮤니케이션, 상태, 활동 (다이어그램)) - 커뮤니케이션 vs 순차 (객체들 간의 관계까지 표현 ->커뮤니케이션)

6. 소프트웨어 재사용 (합성중심, 생성중심)
    소프트웨어 재공학 - 기존을 개선 하여 새로운 기능 추가하여 사용
    CASE  - 소프트웨어 개발 과정에서 사용되는 요구분석 설계 구현 검사 및 디버깅 과정 전체또는 일부를 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화 하는 것

7. 비용산정기법 (상향식) - 세부적인 작업 단위별로 비용을 산정한 후 집계하여 전체 비용을 산정하는 방법이다.
 (LOC(원시 코드 라인 수), 개발 단계별 인월수 기법, 수학적 산정 기법)
  - 수학적 산정기법 (COCOMO모형) -> LOC기법 후 소프트웨어 종류에 따라 책정되는 비용 산정 방정식에 대입
                                  PUTNAM -> 소프트웨어 생명주기에 따라
                                  기능점수모형 -> 기능을 증대시키는 요인별로 
     -> 조직형(5만 이하), 반분리형(30만 이하), 내장형(30만 이상)

8. 프로젝트 일정 계획
  - WBS, PERT/CPM, 간트차트

9. 소프트웨어 개발 프레임워크 특성
 -> 모듈화 , 재사용성, 확장성, 제어의 역흐름

10. 데이터베이스 - 스키마 (데이터베이스의 구조와 제약조건을 전반적인 명세를 기술한 것)
 -> 외부 스키마  - 논리적 구조를 정의 
      개념 스키마 - DB의 전체적인 논리적 구조
      내부 스키마 - 물리적 저장장치의 입장 

11. 데이터베이스 설계
 요구조건->개념적설계 -> 논리적설계 -> 물리적설계 -> 구현
  개념적설계 (현실세계 -> 추상적개념으로 표현)
  논리적설계 (현실 자료 -> 물리적 저장장치에 저장할 수 있도록 변환 하기 위해 DBMS가 이지원 하는 논리적 구조로 변경)
 물리적설계 (논리적 구조로 표현된 데이터를 물리적 저장장치에 저장할수 있는 물리적 구조의 데이터로 변환하는 과정)

12. 데이터모델 (현실자료들을 체계적으로 표현한 개념적 모형)
 -데이터 모델에 표시할 요소 (구조, 연산, 제약조건)

13. ER관계 /개념적 데이터 모델의 가장 대표(개체와 개체 간의 관계를 기본 요소로 현실세계의 데이터를 개념적인 논리 데이터로 표현)
 ER다이어그램 (타원[속성], 마름모[관계], 사각형[개체])

14.  관계형 데이터베이스 (2차원적인 표를 이용해서 데이터 상호관계를 정의하는 데이터베이스)
   튜플(Tuple) - 로우(Row) - 카디널리티 - 기수
    속성(Attribute) - 컬럼(Column) - 디그리 - 차수 // 도메인(하나의 같은 타입의 원자)

15. 관계형 데이터베이스의 제약조건 (후보키, 기본키, 대체키, 슈퍼키, 외래키)
 - 후보키 / 유일성, 최소성
 - 슈퍼키/ 유일성

16. 관계형데이터베이스의 제약 조건 - 무결성 (데이터베이스의 값과 현실세계에서의 실제 값이 완전히 일치함)
-무결설의 종류 // 개체무결성, 참조 무결성, 도메인 무결성 , 사용자 정의 무결성
개체무결성 -> 테이블에서 기본키를 구성하는 어떤 속성도 널이나 중복값을 가질수 없다.
참조무결성 -> 외래키 값은 null이거나 참조 릴레이션의 기본키 값과 동일해야함 

17. 관계대수 및 관계해석 
 - 관계대수는 관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해서 어덯게 유도하는가를 기술하느 절차적인 언어이다. (대절해비)
 -> 순수 관계연산자
 select 시그마 , project 파이, join 나비넥타이, division 나누기
 -> 일반 집합연산자
 union(합집합), intersection(교집합), differencd(차집합), cartesain product(교차곱) 

18. 이상/ 함수적 종속
 이상 (삽입이상, 삭제이상, 갱신이상)
 함수적종속 X(결정자)->Y(종속자)
 - 완전함수적 종속, 부분 함수적 종속, 완전/부분 함수적 종속, 이행적 함수적 종속

19. 정규화 (테이블의 속성들이 상호 종속적안 관계를 갖는 특성을 이용하여 테이블을 무손실 분해하는 과정)
 -> 정규화 과정
 두부이결다조
 (1, 2, 3, BCNF, 4,5)
 -> 도메인이 원자값, 부분적함수 종속 제거, 이행적 함수 종속제거, 결정자이면서 후보키가 아닌 것 제거, 다치 종속제거, 조인 종속성 이용)

20. 반정규화 과정
정규화된 데이터 모델을 의도적으로 통합, 중복, 분리하여 정규화 원칙을 위배하는 행위이다.
-> 테이블 통합, 테이블 분할(수평/레코드기준,수직/속성기준 분할), 중복테이블 추가(집계테이블, 진행테이블, 특정부분만을 포함하는 테이블)의 추가, 중복속성 추가

21. 시스템카탈로그 -> 시스템 자신이 필요로 하는 스키마 및 여러가지 객체에 관한 정보를 포함하고 잇는 시스템 데이터베이스

22. 트랜잭션
- 원자성 -> 트랜잭션의 연산은 데이터베이스에 모두 커밋 되던지 아니면 롤백 되던지 해야한다.
- 일관성 -> 트랜잭션이 실행을 성공하면 데이터베이스에 일관성 있게 있어야 한다.
- 독립성,격리성,순차성 -> 트랜잭션 두가지가 실행시 서로 독립적이다.
- 영속성,지속성 -> 성공된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되야한다.

23. 파티션 대용량의 테이블이나 인덱스를 작은 논리적 단위인 파티션으로 나누는것
 -  범위, 해시, 조합 분할 

24. RTO (비상사태 또는 업무중단 시점으로부터 업무가 복구되어 다시 정상가동 될 때까지의 시간)
      RPO(비상사태 또는 업무중단시점으로부터 데이터를 복구할 수 있는 기준점을 의미함)

25. 데이터베이스 보안
 - 접근통제 3요소 /접근통제 정책, 접근통제 메커니즘, 접근통제 보안모델
 -> 접근통제 정책 -
  임의 접근통제 (DAC) 데이터 접근하는 사용자의 신원에 따라 접근 권한을 부여하는 형식
  강제 접근통제 (MAC) 주체와 객체 등급을 비교하여 접근 권한을 부여 하는 방식
  역할기반 접근통제 (RDBC) 사용자의 역할에 따라 접근 권한을 부여하는 방식

26. 데이터베이스 백업
 -> 데이터베이스 복구 알고리즘
 redo-> 트랜잭션의 기록이 있어 실행
 undo -> 트랜잭션의 commit기록 이 없어 모두 취소 한다.

27.스토리지 (대용량 데이터를 저장하기 위해 서버와 저장장치를 연결하는 기술)
- DAS, NAS, SAN
 - DAS 서버와 저장장치를 케이블로 직접 연결
 - NAS 서버와 저장장치를 네트워크를 통해 연결
 - SAN 서버와 저장장치를 연결하는 전용 네트워크 구성

28. 이진트리 
 preorder ROOT -> LEFT -> RIGHT
 inorder   LEFT -> ROOT -> RIGHT
 postorder LEFT -> RIGHT -> ROOT

29. 정렬 
 삽입정렬 - 1~회전 까지 작은수를 앞에다 그냥 두기
 선택정렬 - 1회전  12,13,14,15/  2회전 23,24,25
 버블정렬 - 1회전 12,23,34,45, / 2회전 12,23,34
 쉘 정렬
 퀵정렬
힙정렬

30. XML 특수한 목적을 갖는 마크업 언어를 만드는데 사용되는 다목적 마크업 언어이다.
->SOAP  네트워크 상에서 HTTP/S , STMP 등을 이용 하여 XML을 교환하기 위한 통신 규약
 ->WSDL 웹 서비스와 관련되 서식이나 프로토콜 등을 표준적인 방법으로 기술하고 게시하기 위한 언어
   XML과 JAVA 는 AJAX
   XML과 언어는 WSDL
   XML과 프로토콜은 SOAP

31. 소프트웨어 아키텍처(소프트웨어를 구성하는 요소들 간의 관계를 표현하는 시스템의 구조 또는 구조체 )
 - 추(상화), - 전체적이고 포괄적인 개념을 설계 후 차례로 세분화하여 구체화 
   모(듈화),  - 시스템의 기능들을 모듈 단위로 나누는 것
   단(계적분해),  - 상위의 개념 -> 하위의 개념으로 구체화시키는 분할기법
   정(보 은닉) - 모듈 내부에 포함된 절차와 자료들의 정보가 감추어져 다른 모듈이 접근 못하도록

32. 아키텍처 패턴 (아키텍처를 설계할 떄 참조할 수 있는 전형적인 해결 방식)
 - 파이프 -필터패턴 (데이터 스트림 절차의 각 단계를 필터로 캡슐화 하여 파이프를 통해 전송하는 패턴)
 - MVC 패턴 

33. 객체지향 (객클메 캡상다연)
 객체, 클래스, 메시지, 캡슐화, 상속, 다형성, 연관성

34. 객체지향 분석 및 설계 (사용자의 요구사항과 관련된 객체, 속성, 연산, 관계 등을 정의하여 모델링 하는 작업)
  - 럼바우 방법 (객동기) 
  - coad와 yourdon방법 ER다이어그램을 사용하여 객체 행위를 모델링함

--- 럼바우의 분석기법 - 모든 소프트웨어 구성요소를 그래픽 표기법을 이용하여 모델링 하는 기법
  - 객체 모델링 - 시스템 요구하는 객체 찾고 각 객체 간의 관계를 규정
  - 동적 모델링 - 상태다이어그램을 이용하여 시간의 흐름에 따른 모델링
  - 기능 모델링 - 자료흐름도(DFD)를 이용하여 다수의 프로세스들 간의 자료흐름을 중심으로 처리과정을 표현

35. 객체지향 설계 원칙 (변경이나 확장에 유연한 시스템을 설계하기 위해 지켜져야할 원칙) - 단 개 이 인 의
 - 단일 책임원칙(객체는 단 하나의 책임)
 - 개방 폐쇠원칙(기존의 코드를 변경없이 기능을 추가하도록 설계)
 - 리스코프 치환 원칙(자식클래스는 부모클래스의 기능을 수행 가능)
 - 인터페이스 분리 원칙(자신이 사용하지 않는 인터페이스와 의존관계를 맺거나 영향X)
 - 의존 역전 원칙 (의존관계 성립시 추상성이 높은 클래스와 의존관계를 맺어야함) 

36. 모듈
 - 결합도의 종류 강함(내공외제스자)약함
 내용 결합도 - 한 모듈이 다른 모듈의 내부 기능 자료를 직접 참조 수정
 공유 결합도 - 공유되는 공통 데이터영역을 여러 모듈이 사용
 외부 결합도 - 외부에서의 다른 묘듈에서 참조
 제어 결합도 - 논리적 흐름을 제어위해 신호나 제어요소를 전달
 스탬프 결합도 - 모듈간의 인터페이스로 배열이나 레코드 등의 자료구조 전달
 자료 결합도 - 인터페이스가 자료요소로만 구성됨

- 응집도의 종류 강함(기순교절 시논우)약함
 기능적응집도  - 모든 요소들이 단일 문제와 연관 수행
 순차적응집도 -  하나의 활동으로 나온 데이터를 다음 활동에서 입력
 교환적응집도 -  동일한 입력과 출력을 사용하여 다른 기능 수행
 절차적응집도 - 모듈안에 다수의 기능을 안에 구성요소들이 순차적으로 수행
 시간적 응집도 - 특정 시간에 처리
 논리적응집도 -  유사한 성격을 갖는
 우연적 응집도 - 서로 관련 없는 요소로

37. 단위 모듈
 IPC (모듈 간 통신 방식을 구현하기 위해 사용되는 대표적인 프로그래밍 인터페이스 집합)
 테스트케이스 (소프트웨어가 사용자의 요구사항을 정확하게 준수 했는지 )

38. 디자인패턴 (모듈간의 관계 및 인터페이스를 설계할 떄 참조할 수 있는 전형적인 해결 방식 또는 예제) 71섹션
  - 생성패턴, 구조패턴, 행위패턴
  생성패턴 추상팩토리, 빌더, 팩토리메소드, 프로토타입, 싱글톤, (프로토 팩토리는 추상적으로 혼자 지어짐)
  구조패턴 어댑터, 프록시, 브리지 (프브어)
  행위패턴  책임연쇄, 커맨드, 인터프리터, 반복자, 중재자, 메멘토, 옵서버, 상태, 전략, 템플릿메소드, 방문자 (책커인 반중 메옵상전)

39. 미들웨어 솔루션(운영체제와 응용프로그램 또는 서버와 클라이언트 사이에서 다양한 서비스를 제공하는 소프트웨어)
 미들웨어의 종류 (RMD TOW)
 RPC(원격 프로시저 호출) - 원격프로시저를 마치 로컬 로컬프로시저처럼 호출하는 미들웨어
 MOM(메시지 지향 미들웨어) - 비동기형 메시지를 전달하는 미들웨어
 DB - 클라이언트에서 원격의 데이터베이스와 연결하는 미들웨어
 TP-Monitor - 트랜잭션을 처리 및 감시하는 미들웨어
 ORB - 
 WAS - 동적인 콘텐츠를 처리하기 위한 미들웨어

40. 모듈연계를 위한 인터페이스 기능 식별 // 모듈연계(내부와 외부모듈간의 데이터의 교환을 위해 관계설정) // 80섹션
 - EAI  기업 내 각종 애플리케이션 및 플램폼 간의 정보 전달 상호 연동이 가능하게 해주는 솔루션 (PHMH)
   point to point, hub & spoke, message Bus, Hybrid (책 이미지 참조) 
 - ESB 애플리케이션 간 연계,데이터변환, 웹서비스 지원을 표준 기반의 인터페이스를 제공하는 솔루션
 - 웹서비스 네트워크의 정보를 표준화된 서비스 형태로 만들어 공유하는 기술 
  웹서비스의 구성
SOAP - (http,https,smtp) 활용하여, xml기반의 메시지를 네트워크 상에서 교환 XML, 프로토콜
WSDL - XML, 언어
UDDI  - WDSL을 등록하여 서비스와 서비스 제공자르 검색하고 접근


41. 인터페이스의 구현 (송수신 시스템 간의 데이터 교환및 처리를 실현해 주는 작업)
 JSON - 데이터 객체를 속성 값의 쌍 형태로 표현하는 개방형 표준 포맷
 AJAX

42. 인터페이스 보안
 - 인터페이스 보안 기능 적용 (네트워크 , 애플리케이션, 데이터베이스 영역)
 네트워크 영역 - 인터페이스 송수신 간 스니핑 등을 이용한 데이터 탈취 및 변조 위협을 방지하기 위해 네트워크 트래픽에 대한 암호화를 설정함
 IPSEC - IP패킷 단위의 데이터 변조 방지 및 은닉 기능을 제공
 SSL - TCP/IP계층과 애플리케이션 계층 사이에서 인증, 암호화 보장하는 프로토콜
 S-HTTP - 클라이언트와 서버 간에 전송되는 모든 메시지를 암호화

43. 인터페이스 구현 검증
 - 인터페이스 구현검증 도구 (XSFNSW)
 xUnit - java의 jUnit/ 같은 테스트코드를 여러번 x 
 STAF - 서비스호출 및 컴포넌트 재사용 등 자동화 다양한 환경을 지원하는 테스트 프레임워크 
 FitNesse - 웹 기반 테스트 케이스 설계, 실행, 결과 확인 등을 지원하는 테스트 프레임워크
 NTAF - fitnesse와 staf의 장점을 섞은 NHN의 테스트 자동화 프레임워크
 watir - ruby를 사용하는 애플리케이션 테스트 프레임워크

44. 사용자 인터페이스 (사용자와 시스템 간의 상호작용이 원활하게 이뤄지도록 도와주는 장치나 소프트웨어를 의미)
CLI(커맨드 입력), GUI(마우스 아이콘), NUI(사용자의 말)
 - 사용자 인터페이스의 기본원칙 (집행유해 학폭유)
 직관성, 누구나 쉽게 이해하고 사용 가능 
유효성, 사용자의 목적을 정확 완벽하게 달성
학습성, 누구나 쉽게 배우고 익힘
유연성 사용자의 요구사항을 최대한 수용하고 실수를 최소화

목업 - 실제화면과 유사하게 만든 정적인 형태의 모형(UI설계도구)

45. 품질 요구사항
 - ISO/IEC 9126의 (소프트웨어 품질 특성) //귀신사요 -> 업그레이드 버전 25010
 기능성 - 소프트웨어가 사용자의 요구사항을 정확하게 만족하는 기능 제공 (상호운영성, 보안성)
 신뢰성 - 주어진 시간동안 주어진 기능을 오류없이 수행
 사용성 - 사용자와 컴퓨터 사이에 발생하는 어떠한 행위에 대하여 사용자가 정확히 이해
 효율성 - 사용자가 요구하는 기능을 얼마나 빠르게 처리 할수 있는지 
 -ISO/IEC 12119 (패키지 소프트웨어서 품질 측정 절차)

46. HCI - 사람이 시스템을 보다 편리하고 안전하게 사용할 수 있도록 연구 개발 하는 학문
      UX  - 사용자가 시스템이나 서비스를 이용하면서 느끼고 생각 하게 되는 총제적인 경험

47. 애플리케이션 테스트 (애플리케이션에 잠재되어 있는 결함을 찾아내는 일련의 행위 또는 절차)
 - 파래토법칙 -20%코드에서 80%의 결함이 발견
 - 살충제 패러독스 - 동일한 테스트케이스로 동일한 테스트를 반복하면 더이상 결함이 발견x

48. 애플리케이션 테스트의 분류
 - 정적테스트 / 프로그램을 실행하지 않고
 - 동적테스트 / 프로그램을 실행하여 
 //// 시각에 따른 테스트 - 검증테스트 (개발자의 시각에서 ),,, 확인테스트(사용자의 시각에서)

49. 테스트 기법에 따른 애플리케이션 테스트
 1. 화이트박스 테스트 (원시 코드의 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계 하는방법)
 - 화이트박스 테스트의 종류
  -- 기초경로검사 (테스트케이스 설계자가 절차적 설계의 논리적 복잡성을 측정 할 수 있게 해주는 테스트 기법)
  -- 제어구조검사 (
  조건검사- 프로그램 모듈 내에 있는 논리적 조건
  루프검사- 프로그램의 반복구조에 초점
  데이터흐름검사- 프로그램에서 변수의 정의와 변수 사용의 위치에 초점

 2. 화이트박스 테스트의 검증 기준 (문,분,조,투)
 - 문장 검증 기준 - 소스코드의 모든 구문이 한 번 이상 수행
 - 분기(결정) 검증 기준 - 소스 코드의 모든 조건문에 대해 조건식의 결과가 true와 false인 경우  
 - 조건 검증 기준 - 소스 코드의 조건문에 포함된 (개별이란 단어가 있으면)
 - 분기/조건 기준 - 분기와 조건 검증 모두 만족
 
 3. 블랙박스 테스트 ( 각 기능이 완전히 작동되는 것을 입증하는 테스트)
 - 블랙박스테스트의 종류  // 동,경,원
  -- 동치분할검사 - 입력조건에 타당한것과 타당하지 않은것의 입력 자료의 개수를 균등하게
  -- 경계값 분석 - 경계값에서 테스트
  -- 원인-효과 그래프 검사 - 입력 데이터 간의 관계와 출력에 영향을 미치는 상황을 체계적으로 분석 한다음 선정

50. 개발단계에 따른 애플리케이션 테스트 
 - 단위테스트 -> 
  통합테스트 -> 
  시스템테스트 ->
 인수테스트(사용자의 요구사항을 충족하는지에 중점) (알파테스트 - 사용자가 개발자앞에서, 베타테스트 - 선정된 최종사용자가 여려명) 

51. 통합테스트 
 - 하향식 통합테스트 - 상위모듈에서 하위모듈방향으로) - 스텁
 - 상향식 통합테스트 - 하위모듈에서 상위모듈 방향으로) - 드라이버
 - 회귀테스팅 - 통합테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

52. 테스트오라클(테스트 결과가 올바른지 판단하기 위해 사전에 정의된 참값을 대입하여 비교하는 기법)   // 참샘추위
 - 참오라클 - 기대하는 결과값 제공하는 오라클
 - 샘플링오라클 - 특정한 몇몇 테스트 케이스의 입력값에서 기대하는 결과값
 - 추정오라클(휴리스틕) - 샘플링오라클에서 나머지 입력값들에 대해서 추정
 - 일관성검사  - 애플리케이션에 변경이 있을 떄 테스트케이스 수행 전과 후의 결과값이 동일한지

53. 결함 - 소프트웨어가 개발자가 설계한 것과 다르게 동작하거나 다른결과가 발생 되는 것

54. 애플리케이션 성능 (최소한의 자원을 사용하여 최대한 많은 기능을 신속하게 처리)
 - 애플리케이션 성능 측정 지표
   -- 처리량 , 응답시간, 경과시간, 자원사용률 

빅오표기법에서 알고리즘 의 수행시간이 입력 데이터 수와 관계없이 일정하다는 것을 의미하는 알고리즘 시간복잡도 
  0(1)

55. 애플리케이션 성능개선
 - 스파케티코드 (코드의 로직이 서로 복잡하게 얽혀 있음)
 - 외계인 코드 (아주 오래되거나 참고문서, 개발자가 없이 유지보수가 어려운 코드)
 
- 클린코드의 작성원칙 (가단의중추)
  -- 가독성 / 누구든지 쉽게 읽을수 있음
  -- 단순성 / 코드를 간단하게 작성
  -- 의존성배제 /  코드가 다른 모듈에 미치는 영향을 최소화
  -- 중복성 최소화 /  코드의 중복을 최소화
  -- 추상화 / 상위, 메소드, 함수에서는 간략하게 특성을 나타내고 하위에서 구현
   
-소스코드 품질분석도구 (정적 분석도구(static Analysis), 동적분석도구(Dynamic Analysis))

56. 소프트웨어 개발 보안 요소 (무기가)
 - 기밀성 -- 시스템 내의 정보와 자원은 인가된 사용자에게만 접근이 허용됨
 - 무결성 -- 시스템 내의 정보는 오직 인가된 사용자만 수정할 수있음
 - 가용성 -- 인가받은 사용자는 시스템 내의 정보와 자원을 언제라도 사용 할 수 있음

57. 입력데이터 검증 및 표현 (입력데이터로 인해 발생하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목들이다.) (메에스크)
 -  SQL 삽입(INjection) -- 웹응용 프로그램에 sql을 삽입하여 내부 데이터베이스 서버의 데이터를 유출 및 변조
 - 크로스사이트스크립팅(XSS) -- 웹페이지에 악의적인 스크립트를 삽입하여 방문자들의 정보를 탈취 
 - 메모리버퍼 오버플로 -- 연속된 메모리 공간을 사용하는 프로그램의 할당된 메모리 범위를 넘어선 곳에서 자료 이용

58. 코드오류 // 스택가드 -- 메모리상에서 프로그램의 복귀주소와 변수 사이에 특정 값을 지정 한 후 그 값이 변경 되었을 경우 오버플로우 상태로 판단 중단

59. 암호 알고리즘
 - 개인키암호화 - 동일한 키로 암호화와 복호화
 - 공개키암호화 - 공개키는 사용자에게 공개 복호화의 비밀키는 관리자가 관리

 - 해시(임의의 길이의 입력 데이터난 메시지를 고정된 길이의 값이나 키로 변환하는것)
   -- MD5(md4개선용)

60. 양방향 알고리즘의 종류  (에라이 에스케이티)
 - AES (개인키 암호화 알고리즘)
 - RSA(공개키 암호화 알고리즘)
 - IDEA(PES를 개선한 알고리즘)
 - skipjack(국가 안전 보장국에서 개발한 암호화 알고리즘)
 - TKIP(임시 키 무결성 프로토콜)

61. 서비스공격유형(대량의 데이터를 한 곳의 서버에 집중적으로 전송함 으로써 서버의 기능을 방해 )
 - LandAttack 패킷을 전송할 때 송신 IP주소와 수신 IP주소를 모두 공격의 대상의 IP주소로 공격
 - DDos 여러 곳에 분산된 공격 지점에서 한곳의 서버에 대해 서비스 거부 공격을 수행

62. 네트워크 침해 공격 관련 용어 (세에스사다타)
 - 세션하이재킹 서버와 클라이언트의 세션정보를 가로채기
 - ARP스푸핑 물리적주소(MAC)를 공격대상의 것으로 변조하여 공격대상에게 도달해야하는 데이터 패킷을 가로챔
 - 스니핑 네트워크의 중간에서 남의 패킷 정보를 도청
 - 사회 공학 인간의 신뢰를 바탕으로 속이는 비기술적인 시스템 침입수단
 - 다크데이터 활용되지 않고 저장만 되어 있는 대량의 데이터
 - 타이포스쿼팅 유명한 도메인 비슷하게 만들어 정보수집

63. 정보 보안 침해 공격 관련 용어 (워웜백키랜)
 - 워터링홀 -- 목표물이 자주 방문 하는 웹사이트를 사전에 감염 방문시 악성코드에 감염시킴
 - 웜 -- 네트워크를 통해 자신을 연속적으로 복제
 - 백도어 -- 설계자및 기술자가 유지보수의; 편의를 위한 통로를 이용
 - 키로거 공격 -- 컴퓨터 사용자의 키보드 움직음을 탐지하여 정보탈취
 - 랜섬웨어  -- 인터넷사용자의 컴푸터에 잠입 내부 문서 파일을 암호화


64. 보안솔루션 (반스)
 - VPN 공중네트워크와 암호화 기술을 이용하여 사용자가 마치 자신의 전용 회선을 사용하는 것처럼 해주는 보안 솔루션
 - NAC 네트워크에 접속하는 내부 PC의 정보를 기록 보안
 - SIEM 로그 및 보안 이벤트를 통합하여 관리하는 빅데이터 기반의 보안 솔루션

65. 헝가리안 표기법 - 변수명 작성시 변수의 자료형을 알수 있도록 자료형을 의미하는 문자를 포함하여 작성

66. Python의 대한 설명
 - pop 리스트의 위치에 있는 값을 출력하고 해당 요소를 삭제한다.
 - index 리스트에서 값이 저장된 요소의 위치를 반환
- count 리스트에서 값이 저장되어 있는 요소들의 개수를 반환한다.
 - extend - 리스트의 끝에 새로운 리스트를 추가하여 확장한다.
 - reverse 리스트의 순서를 역순으로 뒤집는다. 

67. 운영체제의 종류 
 - Unix 시분할 시스템을 위해 설계된 대화식 운영체제, 대부분 C언어로 작성됨 
  -- Unix 시스템의 구성 (커널 : 컴퓨터가 부팅될떄 주기억장치에 적재 // 쉘 : 사용자의 명령어를 인식하여 프로그램을 호출하고 명령을 수행) 
  - Android
   -- 구글 사에서 개발한 리눅스 커널 기반의 개방형 모바일 운영체제 이다. // 자바와 코틀린으로 애플리케이션을 작성

68. 페이지 교체 알고리즘
 - FIFO, LRU(최근의 가장 오랫동안 사용하지 않은 페이지를 교체) , 

69. 프로세트 상태 전이 (프로세스가 시스템 내에 존재하는 동안 프로세스의 상태가 변하는 것)
- 제출 -> 접수 -> 준비 ->실행 -> 종료
                                 <-대기<-
  - 스레드 (경량프로세스), ///Dispatch - 준비 상태에서 대기하고 있는 프로세스 중 하나가 프로세서를 할당 받아 실행 상태로 전이 

70. 주요 스케줄링 알고리즘 (푸시하레스)
 - FCFS(선입선출) = FIFO 준비상태 큐에 도착한 순서에 따라 차례로 CPU를 할당하는 기법
 - SJF (단기 작업 우선) = 실행시간이 가장 짧은 프로세스에게 먼저 CPU를 할당
 - HRN = 대기시간과 서비스(실행) 시간을 이용한 기법 대+서/ 서
 - RR 시간 할당량 동안만 실행한 후 완료 되지 않으면 다음 프로세스에게 CPU전달
 - SRT = rr에서 새로 도착한 프로세스의 실행시간을 비교 하여 짧은 프로세스 실행

71. Unix/Lnux 명령어
 - cd 디렉터리의 위치를 변경함
 - chmod 파일의 보호모드를 설정하여 파일의 사용 허가를 지정함.. (rwx - 사용자,그룹,기타 (all = 7)

72. 143섹션 서브네팅 하는 방법 공부하기. (여기선 알려 주기 어려움 )

73. IPv6 16비트씩 8부분, 총 128비트로 구성 (유니, 멀티, 애니 캐스트)

74. OSI 참조 모델 (ISO에서 제안한 통신 규약)
 - 하위계층 물데네
 - 상위계층 전세표응
 --- 물리계층 = 전송에 필요한 두 장치 간의 실제 접속
 --- 데이터링크계층 = 링크의 설정과 유지 및 종료를 담당하며, 노드간의 오류제어와 흐름제어 기능을 수행하는 계층 / 물리적으로 연결된 두개의 인접한 개방 시스템들 간에 정보전송을 하도록 ~~기능수행
 --- 전송계층 = 단말기 사이에 오류수정과 흐름제어를 수행하여 신뢰성 있고 명확한 데이터
 --- 세션계층 = 두 응용 프로세스 간의 통신에 대한 제어 구조를 제공,/ 연결의 생성,관리 , 종료를 위해 토큰을 사용한다.
 --- 표현계층 = 서로 다른 데이터 표현 형태를 갖는 시스템 간의 상호 접속을 위해 필요한 계층으로 코드변환, 데이터암호화, 데이터 압축, 구문검색 등의 기능을 수행한다.

75. 프로토콜 (데이터교환을 원활하게 표준화/ 메세지 도착안할경우 재전송 기술적은어)
 - 프로토콜의 기본요소 (구문, 의미, 시간)
응용계층의 주요프로토콜 
 FTP - 컴퓨터와 컴퓨터 또는 컴퓨터와 인터넷 사이에서 파일 주고 받을수 있도록
 SMTP - 전자우편 교환서비스
 HTTP - 월드 와이드 웹에서 HTML 문서를 송수신하기위한 

 전송계층의 주요프로토콜
 TCP - 양방향연결형 서비스, 가상회선 연결형태의 , 
 UDP - 데이터 전송 전에 연결을 설정하지 않는 비연결형, 전송속도가 빠름

 인터넷 계층의 주요 프로토콜 
 ICMP - IP와 조합하여 통신 중에 발생하는 오류의 처리와 전송경로 변경등을 위한 제어 메시지 
 ARP - 호스트의 IP주소를 물리적 주소(MAC)로 바꿈
 RARP - ARP와 반대로 변환시킴
 
 
76. 네트워크 관련 신기술
 - 메시 네트워크 : (차세대 이동통신, 홈네트워킹, 공공 안전 등 특수 목적을 위한 새로운 방식)
 - 피코넷 : (여러개의 독립된 통신장치가 블루투스 기술이나 UWB통신 기술을 사용 통신망 형성)
 - 애드 혹 네트워크  : (재난 현장과 같이 별도로 고정된 유선망이 없는 곳에서 모바일 호스트만 이용 형성)
 - 파장 분할 다중화  : (파장이 다른 복수의 신호를 보내 여러개의 통신단말기에 동시에 사용)
 - 소프트웨어 정의 데이터 센터 : (데이터 센터의 모든 자원을 가상화 하여 인력의 개입없이 소프트웨어 조작만으로 관리 및 제어 되는 데이터 센터를 의미함)
 - 개방형 링크드 데이터 : (링크드 데이터,오픈 데이터의 합성어로 누구나 사용할 수 있도록 웹상에 공개된 연계 데이터를 의미함)
- SSO : 한번의 로그인으로 개인이 가입한 모든 사이트를 이용 가능하게 해줌

77. 네트워크 구축 (성형, 링형, 버스형, 계층형, 망형)
 - NAT (한개의 IP주소에 대량의 가상 사설 IP주소를 할당 및 연결)

78. 경로제어(전송 경로 중에서 최적 패킷 교환경로를 결정)/ 트레픽제어(전송되는 패킷의 흐름 또는 그 양을 조절하는 기능) 
 - 경로 제어 프로토콜
  -- IGP (하나의 자율 시스템 내의 라우팅에 사용되는 프로토콜)
  --- RIP 거리벡터 라우팅 프로토콜, 최대 홉카운드 15홉 제한
  --- OSPF : RIP의 단점을 해결, 대규모 네트워크 사용
  -- EGP  (자율 시스템 간의 라우팅)
 -- BGP (자율 시스템 간의 라우팅 프로토콜로 EGP보완형)

79. SW관련 신기술
 - 블록체인 p2p 네트워크를 이용하여 온라인 금융 거래 정보를 온라인 네트워크 참여자의 디지털 장비에 분산 저장하는 기술
 - 매시업 웹에서 제공하는 정보망 서비스를 이용하여 새로운 소프트웨어나 서비스, 데이터베이스 등을 만드는 기술
 - 서비스지향아키텍쳐 기업의 소프트웨어 인프라인 정보시스템을 공유와 재사용이 가능한 서비스 단위나 컴포넌트 중심으로 구축하는 정보 기술 아키텍처
 - 디지털트윈 실제 물리적인 자산대신 소프트웨어로 가상화 함

80. 정보보호용어 
 - ISMS 정보 자산을 안전하게 보호하기 위한 보호 절차와 대책으로 한국인터넷진흥원(KSIA)에서 운영중이다,

81. HW관련 신기술 (스미패)
 - RAID : 0단계 -스트라이핑 적용 / 1단계 미러링을 적용 / 5단계 스트라이핑 적용 후 패리티를 저장/ 6단계 이중패리티를 추가
 - 앤스크린 : N개의 서로 다른 단말기에서 동일한 콘텐츠를 즐김
 - 트러스트존 기술 : 하나의 프로세스에서 일반구역과 보안구역으로 분할하여 하드웨어 기반의 보안 


82. DB관련 신기술 (하타맵데) // psd BTA
 - 하둡 : 오픈소스 기반 분산 컴퓨팅 플랫폼, 일빈PC급 컴퓨터들로 가상화 된 대형 스토리지를 형성하고 거대한 데이터 세트를 병렬로 처리
 - 맵리듀스 : 대용량 데이터를 분산처리하기 위한 목적으로 개발된 프로그래밍 모델, 구글에서 고안된 기술
 - 타조 : 아파치 하둡 기반의 분산데이터 웨어하우스
 - 데이터마이닝 : 대량의 데이터를 분석하여 데이터에 내재된 변수 사이의 상호관계를 규명하여 일정한 패턴을 찾아내는 기법
 - OLAP의 연산종류 : ROLL-up, drill-down, drill-through, drill-across, pivoting, slicing, dicing

83. 회복 병행제어 (연즉병로타)
 - 회복 (DB가 손상 되었을 때 손상되기 이전의 정상상태로 복구하는 작업)
  -- 연기 갱신기법 : 트랜잭션이 성공적으로 완료될때까지 DB에서 실질적인 갱신을 연기
   -- 즉각 갱신기법 : 트랜잭션이 데이터를 갱신하면 트랜잭션이 부분 완료되기 전이라도 즉시 실제 데이터베이스에 반영하는 방법
 - 병행제어 (동시에 실행되는 트랜잭션이 서로간의 상호작용을 제어하는 것)
  -- 로킹 : 트랜잭션이 lock을 요청해서 허락되어야만 액세스 가능// 접근한 데이터에 대한 연산을 모두 마칠 때까지 추가적인 접근을 제한
   -- 타임스탬프 순서 : 부여된 시간에 따라 트랜잭션 작업을 수행

 - 로킹단위 (병행제어에서 한꺼번에 로킹 할 수있는 객체의 크기를 의미)
 
84. 교착상태 (프로세스 2개가 서로 자원을 점유 하면서 서로 다른 자원을 요구 하여 무한정 대기 하는 상태) //상점환비
 - 발동조건 
 1. 상호배제 : 한번에 한 개의 프로세스만이 공유자원을 사용 할수 있어야함
 2. 점유와 대기 : 최소 하나의 자원을 점유하고, 다른 프로세스의 자원을 요구하기위해 대기 상태여야 한다.
 3. 비선점 : 다른 프로세스의 할당된 자원은 사용이 끝날 때까지 강제로 빼앗을수 없다.
 4. 환형대기 : 자신의 자원을 점유하고 앞뒤에 있는 프로세스의 자원을 요구해야한다.



85. 교착상태의 해결방법  (예방, 회피, 발견, 회복)
 - 회피기법 : 교착상태가 발생하면 적절히 피해나간다. (주로 은행원 알고리즘)

86. 릴리즈노트작성 (소프트웨어 개발 과정에서 정리된 릴리즈 정보를 최종 사용자인 고객과 공유하기 인한 문서이다.)
 - Header : 릴리즈 노트 (이름, 버전, 날짜 소프트웨어 이름)
 - 개요, 목적,문제요약 

87. 디지털 저작권 관리 (DRM)
 - 클리어링 하우스 : 저작권에 대한 사용권한, 라이선스 발급, 암호화된 키 관리~~~
 - 콘텐츠 제공자 : 콘텐츠를 제공하는 저작권자
 - 패키저 : 콘텐츠를 메타데이터와 함께 배포 가능한 형태로 묶어 암호화 하는 프로그램
 - 콘텐츠 분배자 : 암호화된 콘텐츠를 유통하는 곳이나 사람
 - DRM컨트롤러 : 배포된 콘텐츠의 이용 권한을 통제 하는 프로그램

 88. 디지털 저작권 관리의 기술요소 (정크식암키)
 - 정책관리, 크랙방지, 식별기술, 암호화, 키관리

 89. 소프트웨어 버전 등록
 - 소프트웨어 패키징의 형상관리 (개발 과정에서 소프트웨어의 변경사항을 관리하기 위해 개발된 일련의 활동)
 - 형상통제 (식별된 형상 항목에 대한 변경 요구를 검토하여 현재의 기준선이 잘 반영될 수 있도록 조정하는 작업)

90. 빌드 자동화 도구(빌드를 포함하여 테스트 및 배포를 자동화 하는 도구이다.)/ 대표적인건 ant, make, maven, gradle, jenkins
 - jenkins (JAVA 기반의 오픈 소스 형태)
 - gradle (groovy를 기반으로 한 오픈 소스 형태의 자동화 도구)

------------------------------------------------------------------ 요약 ------------------------------------------------------------------------------------------------------------------------------------

1. UML- 사물, 관계((실연일의~) , 다이어그램(구조적,행위적)
2. 데이터베이스 - 외부, 개념, 내부 (스키마)
3. 관계형데이터베이스의 제약조건 - 개체무결성, 참조무결성
4. 데이터베이스의 보안 
 -. 임의 접근통제 (DAC) - 사용자의 신원에 따라
 -. 강제 접근통제 (MAC) - 주체와 객체의 등급을 비교
 -. 역할기반 접근통제 (RDBC) - 사용자의 역할에 따라
5. 소프트웨어 아키텍처 (추모단정)
6. 객체지향 설계 원칙 
(단 SRP
개  OCP
이 LSP
인 ISP
의 DIP)

7. 모듈
 - 결합도의 종류 강함(내공외제스자)약함
 내용 결합도 - 한 모듈이 다른 모듈의 내부 기능 자료를 직접 참조 수정
 공유 결합도 - 공유되는 공통 데이터영역을 여러 모듈이 사용
 외부 결합도 - 외부에서의 다른 묘듈에서 참조
 제어 결합도 - 논리적 흐름을 제어위해 신호나 제어요소를 전달
 스탬프 결합도 - 모듈간의 인터페이스로 배열이나 레코드 등의 자료구조 전달
 자료 결합도 - 인터페이스가 자료요소로만 구성됨

- 응집도의 종류 강함(기순교절 시논우)약함
 기능적응집도  - 모든 요소들이 단일 문제와 연관 수행
 순차적응집도 -  하나의 활동으로 나온 데이터를 다음 활동에서 입력
 교환적응집도 -  동일한 입력과 출력을 사용하여 다른 기능 수행
 절차적응집도 - 모듈안에 다수의 기능을 안에 구성요소들이 순차적으로 수행
 시간적 응집도 - 특정 시간에 처리
 논리적응집도 -  유사한 성격을 갖는
 우연적 응집도 - 서로 관련 없는 요소로

8. 단위 모듈
 IPC (대표적인 프로그래밍 인터페이스 집합)

9. 디자인패턴 (책으로 내용 보기)

10. 인터페이스 보안 (IPSEC(IP패킷 단위의 데이터 변조방지), SSL(TCP/IP계층과 애플리케이션 계층 사이 인증 암호화), S-HTTP)

11. 화이트박스 테스트의 검증기준
 - 문장 : 모든구문
   분기(결정) : 모든 조건문 (T,F)
   조건 : 개별이란 단어 (T,F)
   분/조 

12. 테스트오라클 (참샘추일)
 참 : 기대하는 결과값 제공
 샘 : 특정한 몇몇 테이스케이스의 입력값에서 기대하는 결과값
 추 : 샘플링에서 나머지 값은 추정
 일관성 검사

13. 애플리케이션 성능 (자원사용률, 처리량, 응답시간, 경과시간)

14. 클린코드의 작성원칙 (가단의중추)

15. 소프트웨어 개발보안요소 ( 무[수정] 기[접근 허용] 가[언제든 사용])

16. 양방향(암호화) 알고리즘 종류 (ARISKT)

17. 보안공격 (세에[MAC공격대상으로 변경]스사다타, 워엄백키랜, 반스)

18. 주요스케쥴링 알고리즘 (푸시하레스)

19. OSI 참조모델(한번 책보기)

20. 프로토콜 관련 설명 (FSHTUICAR)
 -FTP, SMTP, HTTP, TCP(양방향, 가상회선), UDP(비연결형,속도빠름)
  ICMP(ip조합, 통신중 발생하는 오류 처리), ARP(ip를 MAC), RARP

21. 네트워크 관련 신기술 (메피소개애넷)
 -메시네트워크, 피코넷, 애드혹네트워크, 소프트웨어정의데이터센터, 개방형링크드데이터 ,NAT(한개ip> 다중ip)

22. 경로제어프로토콜 (IEBRO)
IGP,(자율시스템내)
EGP(자율시스템간)
BGP(EGP보완형)
RIP(거리벡터 최대15홉)
OSPF(최단경로로 라우팅)

23. 정보보호용어
 ISMS 정보자산을 보호 한국인터넷진흥원(KSIA)에서 운영

24. HW관련 신기술 (스미패)
 - RAID : 0단계 -스트라이핑 적용 / 1단계 미러링을 적용 / 5단계 스트라이핑 적용 후 패리티를 저장/ 6단계 이중패리티를 추가
 - 앤스크린 : N개의 서로 다른 단말기에서 동일한 콘텐츠를 즐김
 - 트러스트존 기술 : 하나의 프로세스에서 일반구역과 보안구역으로 분할하여 하드웨어 기반의 보안 


25. DB관련 신기술 (하타맵데) // psd BTA
 - 하둡 : 오픈소스 기반 분산 컴퓨팅 플랫폼, 일빈PC급 컴퓨터들로 가상화 된 대형 스토리지를 형성하고 거대한 데이터 세트를 병렬로 처리
 - 맵리듀스 : 대용량 데이터를 분산처리하기 위한 목적으로 개발된 프로그래밍 모델, 구글에서 고안된 기술
 - 타조 : 아파치 하둡 기반의 분산데이터 웨어하우스
 - 데이터마이닝 : 대량의 데이터를 분석하여 데이터에 내재된 변수 사이의 상호관계를 규명하여 일정한 패턴을 찾아내는 기법
 - OLAP의 연산종류 : ROLL-up, drill-down, drill-through, drill-across, pivoting, slicing, dicing

26. 회복 병행제어 (연즉병로타)
 - 회복 (DB가 손상 되었을 때 손상되기 이전의 정상상태로 복구하는 작업)
 - 연기 갱신기법 : 트랜잭션이 성공될때까지 DB에서 실질적인 갱신을 연기
  - 즉각 갱신기법 : 트랜잭션이 데이터를 갱신하면 트랜잭션이 부분 완료되기 전이라도 즉시 실제 데이터베이스에 반영하는 방법
 - 병행제어 (동시에 실행되는 트랜잭션이 서로간의 상호작용을 제어하는 것)
 - 로킹 : 트랜잭션이 lock을 요청해서 허락되어야만 액세스 가능// 접근한 데이터에 대한 연산을 모두 마칠 때까지 추가적인 접근을 제한
  - 타임스탬프 순서 : 부여된 시간에 따라 트랜잭션 작업을 수행

 - 로킹단위 (병행제어에서 한꺼번에 로킹 할 수있는 객체의 크기를 의미)
 
27. 교착상태 (프로세스 2개가 서로 자원을 점유 하면서 서로 다른 자원을 요구 하여 무한정 대기 하는 상태) //상점환비
 - 발동조건 
 1. 상호배제 : 한번에 한 개의 프로세스만이 공유자원을 사용 할수 있어야함
 2. 점유와 대기 : 최소 하나의 자원을 점유하고, 다른 프로세스의 자원을 요구하기위해 대기 상태여야 한다.
 3. 비선점 : 다른 프로세스의 할당된 자원은 사용이 끝날 때까지 강제로 빼앗을수 없다.
 4. 환형대기 : 자신의 자원을 점유하고 앞뒤에 있는 프로세스의 자원을 요구해야한다.

28. 디지털저작권관리(DRM)
- 클리어링하우스
- DRM컨트롤러

29. 디지털 저작권 관리의 기술요소 (정크식암키)
 - 정책관리, 크랙방지, 식별기술, 암호화, 키관리
