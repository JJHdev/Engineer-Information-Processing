41. 인터페이스의 구현 (송수신 시스템 간의 데이터 교환및 처리를 실현해 주는 작업)
 JSON - 데이터 객체를 속성 값의 쌍 형태로 표현하는 개방형 표준 포맷
 AJAX

42. 인터페이스 보안
 - 인터페이스 보안 기능 적용 (네트워크 , 애플리케이션, 데이터베이스 영역)
 네트워크 영역 - 인터페이스 송수신 간 스니핑 등을 이용한 데이터 탈취 및 변조 위협을 방지하기 위해 네트워크 트래픽에 대한 암호화를 설정함
 IPSEC - IP패킷 단위의 데이터 변조 방지 및 은닉 기능을 제공
 SSL - TCP/IP계층과 애플리케이션 계층 사이에서 인증, 암호화 보장하는 프로토콜
 S-HTTP - 클라이언트와 서버 간에 전송되는 모든 메시지를 암호화

43. 인터페이스 구현 검증
 - 인터페이스 구현검증 도구 (XSFNSW)
 xUnit - java의 jUnit/ 같은 테스트코드를 여러번 x 
 STAF - 서비스호출 및 컴포넌트 재사용 등 다양한 환경을 지원하는 테스트 프레임워크 
 FitNesse - 웹 기반 테스트 케이스 설계, 실행, 결과 확인 등을 지원하는 테스트 프레임워크
 NTAF - fitnesse와 staf의 장점을 섞은 NHN의 테스트 자동화 프레임워크
 watir - ruby를 사용하는 애플리케이션 테스트 프레임워크

44. 사용자 인터페이스 (사용자와 시스템 간의 상호작용이 원활하게 이뤄지도록 도와주는 장치나 소프트웨어를 의미)
CLI(커맨드 입력), GUI(마우스 아이콘), NUI(사용자의 말)
 - 사용자 인터페이스의 기본원칙 (집행유해 학폭유)
 직관성, 누구나 쉽게 이해하고 사용 가능 
유효성, 사용자의 목적을 정확 완벽하게 달성
학습성, 누구나 쉽게 배우고 익힘
유연성 사용자의 요구사항을 최대한 수용하고 실수를 최소화

목업 - 실제화면과 유사하게 만든 정적인 형태의 모형(UI설계도구)

45. 품질 요구사항
 - ISO/IEC 9126의 (소프트웨어 품질 특성) //귀신사요 -> 업그레이드 버전 25010
 기능성 - 소프트웨어가 사용자의 요구사항을 정확하게 만족하는 기능 제공 (상호운영성, 보안성)
 신뢰성 - 주어진 시간동안 주어진 기능을 오류없이 수행
 사용성 - 사용자와 컴퓨터 사이에 발생하는 어떠한 행위에 대하여 사용자가 정확히 이해
 효율성 - 사용자가 요구하는 기능을 얼마나 빠르게 처리 할수 있는지 
 -ISO/IEC 12119 (패키지 소프트웨어서 품질 측정 절차)

46. HCI - 사람이 시스템을 보다 편리하고 안전하게 사용할 수 있도록 연구 개발 하는 학문
      UX  - 사용자가 시스템이나 서비스를 이용하면서 느끼고 생각 하게 되는 총제적인 경험

47. 애플리케이션 테스트 (애플리케이션에 잠재되어 있는 결함을 찾아내는 일련의 행위 또는 절차)
 - 파래토법칙 -20%코드에서 80%의 결함이 발견
 - 살충제 패러독스 - 동일한 테스트케이스로 동일한 테스트를 반복하면 더이상 결함이 발견x

48. 애플리케이션 테스트의 분류
 - 정적테스트 / 프로그램을 실행하지 않고
 - 동적테스트 / 프로그램을 실행하여 
 //// 시각에 따른 테스트 - 검증테스트 (개발자의 시각에서 ),,, 확인테스트(사용자의 시각에서)

49. 테스트 기법에 따른 애플리케이션 테스트
 1. 화이트박스 테스트 (원시 코드의 논리적인 모든 경로를 테스트하여 테스트 케이스를 설계 하는방법)
 - 화이트박스 테스트의 종류
  -- 기초경로검사 (테스트케이스 설계자가 절차적 설계의 논리적 복잡성을 측정 할 수 있게 해주는 테스트 기법)
  -- 제어구조검사( 
  조건검사- 프로그램 모듈 내에 있는 논리적 조건
  루프검사- 프로그램의 반복구조에 초점
  데이터흐름검사- 프로그램에서 변수의 정의와 변수 사용의 위치에 초점

 2. 화이트박스 테스트의 검증 기준
 - 문장 검증 기준 - 소스코드의 모든 구문이 한 번 이상 수행
 - 분기 검증 기준 - 소스 코드의 모든 조건문에 대해 조건식의 결과가 true와 false인 경우
 - 조건 검증 기준 - 소스 코드의 조건문에 포함된
 - 분기/조건 기준 - 분기와 조건 검증 모두 만족
 
 3. 블랙박스 테스트 ( 각 기능이 완전히 작동되는 것을 입증하는 테스트)
 - 블랙박스테스트의 종류
  -- 동치분할검사 - 입력조건에 타당한것과 타당하지 않은것의 입력 자료의 개수를 균등하게
  -- 경계값 분석 - 경계값에서 테스트
  -- 원인-효과 그래프 검사 - 입력 데이터 간의 관계와 출력에 영향을 미치는 상황을 체계적으로 분석 한다음 선정

50. 개발단계에 따른 애플리케이션 테스트 
 - 단위테스트 -> 
  통합테스트 -> 
  시스템테스트 ->
 인수테스트(사용자의 요구사항을 충족하는지에 중점) (알파테스트 - 사용자가 개발자앞에서, 베타테스트 - 선정된 최종사용자가 여려명) 

51. 통합테스트 
 - 하향식 통합테스트 - 상위모듈에서 하위모듈방향으로) - 스텁
 - 상향식 통합테스트 - 하위모듈에서 상위모듈 방향으로) - 드라이버
 - 회귀테스팅 - 통합테스트로 인해 변경된 모듈이나 컴포넌트에 새로운 오류가 있는지 확인하는 테스트

52. 테스트오라클(테스트 결과가 올바른지 판단하기 위해 사전에 정의된 참값을 대입하여 비교하는 기법)
 - 참오라클 - 기대하는 결과값 제공하는 오라클
 - 샘플링오라클 - 특정한 몇몇 테스트 케이스의 입력값에서 기대하는 결과값
 - 추정오라클(휴리스틕) - 샘플링오라클에서 나머지 입력값들에 대해서 추정
 - 일관성검사  - 애플리케이션에 변경이 있을 떄 테스트케이스 수행 전과 후의 결과값이 동일한지

53. 결함 - 소프트웨어가 개발자가 설계한 것과 다르게 동작하거나 다른결과가 발생 되는 것

54. 애플리케이션 성능 (최소한의 자원을 사용하여 최대한 많은 기능을 신속하게 처리)
 - 애플리케이션 성능 측정 지표
   -- 처리량 , 응답시간, 경과시간, 자원사용률 

빅오표기법에서 알고리즘 의 수행시간이 입력 데이터 수와 관계없이 일정하다는 것을 의미하는 알고리즘 시간복잡도 
  0(1)

55. 애플리케이션 성능개선
 - 스파케티코드 (코드의 로직이 서로 복잡하게 얽혀 있음)
 - 외계인 코드 (아주 오래되거나 참고문서, 개발자가 없이 유지보수가 어려운 코드)
 
- 클린코드의 작성원칙
  -- 가독성 / 누구든지 쉽게 읽을수 있음
  -- 단순성 / 코드를 간단하게 작성
  -- 의존성배제 /  코드가 다른 모듈에 미치는 여향을 최소화
  -- 중복성 최소화 /  코드의 중복을 최소화
  -- 추상화 / 상위, 메소드, 함수에서는 간략하게 특성을 나타내고 하위에서 구현
   
-소스코드 품질분석도구 (정적 분석도구(static Analysis), 동적분석도구(Dynamic Analysis))

56. 소프트웨어 개발 보안 요소
 - 기밀성 -- 시스템 내의 정보와 자원은 인가된 사용자에게만 접근이 허용됨
 - 무결성 -- 시스템 내의 정보는 오직 인가된 사용자만 수정할 수있음
 - 가용성 -- 인가받은 사용자는 시스템 내의 정보와 자원을 언제라도 사용 할 수 있음

57. 입력데이터 검증 및 표현 (입력데이터로 인해 발생하는 문제들을 예방하기 위해 구현 단계에서 검증해야 하는 보안 점검 항목들이다.)
 -  SQL 삽입(INjection) -- 웹응용 프로그램에 sql을 삽입하여 내부 데이터베이스 서버의 데이터를 유출 및 변조
 - 크로스사이트스크립팅(XSS) -- 웹페이지에 악의적인 스크립트를 삽입하여 방문자들의 정보를 탈취 
 - 메모리버퍼 오버플로 -- 연속된 메모리 공간을 사용하는 프로그램의 할당된 메모리 범위를 넘어선 곳에서 자료 이용

58. 코드오류 // 스택가드 -- 메모리상에서 프로그램의 복귀주소와 변수 사이에 특정 값을 저정 한 후 그 값이 변경 되었을 경우 오버플로우 상태로 판단 중단

59. 암호 알고리즘
 - 개인키암호하 - 동일한 키로 암호화와 복호화
 - 공개키암호화 - 공개키는 사용자에게 공개 복호화의 비밀키는 관리자가 관리

 - 해시(임의의 길이의 입력 데이터난 메시지를 고정된 길이의 값이나 키로 변환하는것)
   -- MD5(md4개선용)

60. 양방향 알고리즘의 종류
 - AES (개인키 암호화 알고리즘)
 - RSA(공개키 암호화 알고리즘)
 - IDEA(PES를 개선한 알고리즘)
 - skipjack(국가 안전 보장국에서 개발한 암호화 알고리즘)
 - TKIP(임시 키 무결성 프로토콜)

61. 서비스공격유형(대량의 데이터를 한 곳의 서버에 집중적으로 전송함 으로써 서버의 기능을 방해 )
 - LandAttack 패킷을 전송할 때 송신 IP주소와 수신 IP주소를 모두 공격의 대산의 IP주소로 공격
 - DDos 여러 곳에 분산된 공격 지점에서 한곳의 서버에 대해 서비스 거부 공격을 수행

62. 네트워크 침해 공격 관련 용어
 - 세션하이재킹 서버와 클라이언트의 세션정보를 가로채기
 - ARP스푸핑 물리적주소(MAC)를 공격대상의 것으로 변조하여 공격대상에게 도달해야하는 데이터 패킷을 가로챔
 - 스니핑 네트워크의 중간에서 남의 패킷 정보를 도청
 - 사회 공학 인간의 신뢰를 바탕으로 속이는 비기술적인 시스템 침입수단
 - 다크데이터 활용되지 않고 저장만 되어 있는 대량의 데이터
 - 타이포스쿼팅 유명한 도메인 비슷하게 만들어 정보수집

63. 정보 보안 침해 공격 관련 용어
 - 워터링홀 -- 목표물이 자주 방문 하는 웹사이트를 사전에 감염 방문시 악성코드에 감염시킴
 - 웜 -- 네트워크를 통해 자신을 연속적으로 복제
 - 키로거 공격 -- 컴퓨터 사용자의 키보드 움직음을 탐지하여 정보탈취
 - 랜섬웨어  -- 인터넷사용자의 컴푸터에 잠입 내부 문서 파일을 암호화
 - 백도어 -- 설계자및 기술자가 유지보수의; 편의를 위한 통로를 이용

64. 보안솔루션
 - VPN 공중네트워크와 암호화 기술을 이용하여 사용자가 마치 자신의 전용 회선을 사용하는 것처럼 해주는 보안 솔루션
 - NAC 네트워크에 접속하는 내부 PC의 정보를 기록 보안
 - SIEM 로그 및 보안 이벤트를 통합하여 관리하는 빅데이터 기반의 보안 솔루션

65. 헝가리안 표기법 - 변수명 작성시 변수의 자료형을 알수 있도록 자료형을 의미하는 문자를 포함하여 작성

66. Python의 대한 설명
 - pop 리스트의 위치에 있는 값을 출력하고 해당 요소를 삭제한다.
 - index 리스트에서 값이 저장된 요소의 위치를 반환
- count 리스트에서 값이 저장되어 있는 요소들의 개수를 반환한다.
 - extend - 리스트의 끝에 새로운 리스트를 추가하여 확장한다.
 - reverse 리스트의 순서를 역순으로 뒤집는다. 

67. 운영체제의 종류 
 - Unix 시분할 시스템을 위해 설계된 대화식 운영체제, 대부분 C언어로 작성됨 
  -- Unix 시스템의 구성 (커널 : 컴퓨터가 부팅될떄 주기억장치에 적재 // 쉘 : 사용자의 명령어를 인식하여 프로그램을 호출하고 명령을 수행) 
  - Android
   -- 구글 사에서 개발한 리눅스 커널 기반의 개방형 모바일 운영체제 이다. // 자바와 코틀린으로 애플리케이션을 작성
  -- 

68. 페이지 교체 알고리즘
 - FIFO, LRU(최근의 가장 오랫동안 사용하지 않은 페이지를 교체) , 

69. 프로세트 상태 전이 (프로세스가 시스템 내에 존재하는 동안 프로세스의 상태가 변하는 것)
- 제출 -> 접수 -> 준비 ->실행 -> 종료
                                 <-대기<-
  - 스레드 (경량프로세스), ///Dispatch - 준비 상태에서 대기하고 있는 프로세스 중 하나가 프로세서를 할당 받아 실행 상태로 전이 

70. 주요 스케줄링 알고리즘
 - FCFS(선입선출) = FIFO 준비상태 큐에 도착한 순서에 따라 차례로 CPU를 할당하는 기법
 - SJF (단기 작업 우선) = 실행시간이 가장 짧은 프로세스에게 먼저 CPU를 할당
 - HRN = 대기시간과 서비스(실행) 시간을 이용한 기법 대+서/ 서
 - RR 시간 할당량 동안만 실행한 후 완료 되지 않으면 다음 프로세스에게 CPU전달
 - SRT = rr에서 새로 도착한 프로세스의 실행시간을 비교 하여 짧은 프로세스 실행

71. Unix/Lnux 명령어
 - cd 디렉터리의 위치를 변경함
 - chmod 파일의 보호모드를 설정하여 파일의 사용 허가를 지정함.. (rwx - 사용자,그룹,기타 (all = 7)

72. 143섹션 서브네팅 하는 방법 공부하기. (여기선 알려 주기 어려움 )

73. IPv6 16비트씩 8부분, 총 128비트로 구성 (유니, 멀티, 애니 캐스트)

74. OSI 참조 모델 (ISO에서 제안한 통신 규약)
 - 하위계층 물데네
 - 상위계층 전세표응
 --- 물리계층 = 전송에 필요한 두 장치 간의 실제 접속
 --- 데이터링크계층 = 링크의 설정과 유지 및 종료를 담당하며, 노드간의 오류제어와 흐름제어 기능을 수행하는 계층 / 물리적으로 연결된 두개의 인접한 개방 시스템들 간에 정보전송을 하도록 ~~기능수행
 --- 전송계층 = 단말기 사이에 오류수정과 흐름제어를 수행하여 신뢰성 있고 명확한 데이터
 --- 세션계층 = 두 응용 프로세스 간의 통신에 대한 제어 구조를 제공,/ 연결의 생성,관리 , 종료를 위해 토큰을 사용한다.
 --- 표현계층 = 서로 다른 데이터 표현 형태를 갖는 시스템 간의 상호 접속을 위해 필요한 계층으로 코드변환, 데이터암호화, 데이터 압축, 구문검색 등의 기능을 수행한다.

75. 
















