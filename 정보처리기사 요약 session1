1. SLC 소프트웨어 생명주기
 -> 폭포수, 프로토타입,나선형, 애자일, 
 -> 애자일
 1. 스크럼 - 팀단위
 2. XP - 고객이 참여와 개발을 반복 극대화 (의단용존피)
 3. 칸반 
 4. lean
 5. 기능 중심 개발

2. 요구사항 정의 -> 기능, 비기능, 사용자, 시스템 (요구사항)
  
3. 요구사항 개발 프로세스 (요구사항을  도출>분석>명세>확인) / 도분명확
 -> 명세 (정형명세기법 , 비정형명세기법)

4. UML (시스템 개발자와 고객의 의사소통이 원활하게 이루어지도록 표준화한 객체지향 모델링언어)
 - UML의 구성요소 (사물, 관계, 다이어그램)
 - 관계 - 실체화(realization), 연관(association), 일반화(generalization), 의존(dependency), 집합(aggregation), 포함(composition) (실 연 일 의 집 포) 

5. UML- 다이어그램 (사물과 관계를 도형으로 표현)
 - 구조적, 행위 다이어그램
 -> 구조적 (클래스, 객체, 컴포넌트, 배치, 복합체 구조, 패키지 (다이어그램)
 -> 행위 (유스케이스, 순차, 커뮤니케이션, 상태, 활동 (다이어그램)) - 커뮤니케이션 vs 순차 (객체들 간의 관계까지 표현 ->커뮤니케이션)

6. 소프트웨어 재사용 (합성중심, 생성중심)
    소프트웨어 재공학 - 기존을 개선 하여 새로운 기능 추가하여 사용
    CASE  - 소프트웨어 개발 과정에서 사용되는 요구분석 설계 구현 검사 및 디버깅 과정 전체또는 일부를 컴퓨터와 전용 소프트웨어 도구를 사용하여 자동화 하는 것

7. 비용산정기법 (상향식) - 세부적인 작업 단위별로 비용을 산정한 후 집계하여 전체 비용을 산정하는 방법이다.
 (LOC(원시 코드 라인 수), 개발 단계별 인월수 기법, 수학적 산정 기법)
  - 수학적 산정기법 (COCOMO모형) -> LOC기법 후 소프트웨어 종류에 따라 책정되는 비용 산정 방정식에 대입
                                  PUTNAM -> 소프트웨어 생명주기에 따라
                                  기능점수모형 -> 기능을 증대시키는 요인별로 
     -> 조직형(5만 이하), 반분리형(30만 이하), 내장형(30만 이상)

8. 프로젝트 일정 계획
  - WBS, PERT/CPM, 간트차트

9. 소프트웨어 개발 프레임워크 특성
 -> 모듈화 , 재사용성, 확장성, 제어의 역흐름

10. 데이터베이스 - 스키마 (데이터베이스의 구조와 제약조건을 전반적인 명세를 기술한 것)
 -> 외부 스키마  - 논리적 구조를 정의 
      개념 스키마 - DB의 전체적인 논리적 구조
      내부 스키마 - 물리적 저장장치의 입장 

11. 데이터베이스 설계
 요구조건->개념적설계 -> 논리적설계 -> 물리적설계 -> 구현
  개념적설계 (현실세계 -> 추상적개념으로 표현)
  논리적설계 (현실 자료 -> 물리적 저장장치에 저장할 수 있도록 변환 하기 위해 DBMS가 이지원 하는 논리적 구조로 변경)
 물리적설계 (논리적 구조로 표현된 데이터를 물리적 저장장치에 저장할수 있는 물리적 구조의 데이터로 변환하는 과정)

12. 데이터모델 (현실자료들을 체계적으로 표현한 개념적 모형)
 -데이터 모델에 표시할 요소 (구조, 연산, 제약조건)

13. ER관계 /개념적 데이터 모델의 가장 대표(개체와 개체 간의 관계를 기본 요소로 현실세계의 데이터를 개념적인 논리 데이터로 표현)
 ER다이어그램 (타원[속성], 마름모[관계], 사각형[개체])

14.  관계형 데이터베이스 (2차원적인 표를 이용해서 데이터 상호관계를 정의하는 데이터베이스)
   튜플(Tuple) - 로우(Row) - 카디널리티 - 기수
    속성(Attribute) - 컬럼(Column) - 디그리 - 차수 // 도메인(하나의 같은 타입의 원자)

15. 관계형 데이터베이스의 제약조건 (후보키, 기본키, 대체키, 슈퍼키, 외래키)
 - 후보키 / 유일성, 최소성
 - 슈퍼키/ 유일성

16. 관계형데이터베이스의 제약 조건 - 무결성 (데이터베이스의 값과 현실세계에서의 실제 값이 완전히 일치함)
-무결설의 종류 // 개체무결성, 참조 무결성, 도메인 무결성 , 사용자 정의 무결성
개체무결성 -> 테이블에서 기본키를 구성하는 어떤 속성도 널이나 중복값을 가질수 없다.
참조무결성 -> 외래키 값은 null이거나 참조 릴레이션의 기본키 값과 동일해야함 

17. 관계대수 및 관계해석 
 - 관계대수는 관계형 데이터베이스에서 원하는 정보와 그 정보를 검색하기 위해서 어덯게 유도하는가를 기술하느 절차적인 언어이다. (대절해비)
 -> 순수 관계연산자
 select 시그마 , project 파이, join 나비넥타이, division 나누기
 -> 일반 집합연산자
 union(합집합), intersection(교집합), differencd(차집합), cartesain product(교차곱) 

18. 이상/ 함수적 종속
 이상 (삽입이상, 삭제이상, 갱신이상)
 함수적종속 X(결정자)->Y(종속자)
 - 완전함수적 종속, 부분 함수적 종속, 완전/부분 함수적 종속, 이행적 함수적 종속

19. 정규화 (테이블의 속성들이 상호 종속적안 관계를 갖는 특성을 이용하여 테이블을 무손실 분해하는 과정)
 -> 정규화 과정
 두부이결다조
 (1, 2, 3, BCNF, 4,5)
 -> 도메인이 원자값, 부분적함수 종속 제거, 이행적 함수 종속제거, 결정자이면서 후보키가 아닌 것 제거, 다치 종속제거, 조인 종속성 이용)

20. 반정규화 과정
정규화된 데이터 모델을 의도적으로 통합, 중복, 분리하여 정규화 원칙을 위배하는 행위이다.
-> 테이블 통합, 테이블 분할(수평/레코드기준,수직/속성기준 분할), 중복테이블 추가(집계테이블, 진행테이블, 특정부분만을 포함하는 테이블)의 추가, 중복속성 추가

21. 시스템카탈로그 -> 시스템 자신이 필요로 하는 스키마 및 여러가지 객체에 관한 정보를 포함하고 잇는 시스템 데이터베이스

22. 트랜잭션
- 원자성 -> 트랜잭션의 연산은 데이터베이스에 모두 커밋 되던지 아니면 롤백 되던지 해야한다.
- 일관성 -> 트랜잭션이 실행을 성공하면 데이터베이스에 일관성 있게 있어야 한다.
- 독립성,격리성,순차성 -> 트랜잭션 두가지가 실행시 서로 독립적이다.
- 영속성,지속성 -> 성공된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영되야한다.

23. 파티션 대용량의 테이블이나 인덱스를 작은 논리적 단위인 파티션으로 나누는것
 -  범위, 해시, 조합 분할 

24. RTO (비상사태 또는 업무중단 시점으로부터 업무가 복구되어 다시 정상가동 될 때까지의 시간)
      RPO(비상사태 또는 업무중단시점으로부터 데이터를 복구할 수 있는 기준점을 의미함)

25. 데이터베이스 보안
 - 접근통제 3요소 /접근통제 정책, 접근통제 메커니즘, 접근통제 보안모델
 -> 접근통제 정책 -
  임의 접근통제 (DAC) 데이터 접근하는 사용자의 신원에 따라 접근 권한을 부여하는 형식
  강제 접근통제 (MAC) 주체와 객체 등급을 비교하여 접근 권한을 부여 하는 방식
  역할기반 접근통제 (RDBC) 사용자의 역할에 따라 접근 권한을 부여하는 방식

26. 데이터베이스 백업
 -> 데이터베이스 복구 알고리즘
 redo-> 트랜잭션의 기록이 있어 실행
 undo -> 트랜잭션의 commit기록 이 없어 모두 취소 한다.

27.스토리지 (대용량 데이터를 저장하기 위해 서버와 저장장치를 연결하는 기술)
- DAS, NAS, SAN
 - DAS 서버와 저장장치를 케이블로 직접 연결
 - NAS 서버와 저장장치를 네트워크를 통해 연결
 - SAN 서버와 저장장치를 연결하는 전용 네트워크 구성

28. 이진트리 
 preorder ROOT -> LEFT -> RIGHT
 inorder   LEFT -> ROOT -> RIGHT
 postorder LEFT -> RIGHT -> ROOT

29. 정렬 
 삽입정렬 - 1~회전 까지 작은수를 앞에다 그냥 두기
 선택정렬 - 1회전  12,13,14,15/  2회전 23,24,25
 버블정렬 - 1회전 12,23,34,45, / 2회전 12,23,34
 쉘 정렬
 퀵정렬
힙정렬

30. XML 특수한 목적을 갖는 마크업 언어를 만드는데 사용되는 다목적 마크업 언어이다.
->SOAP  네트워크 상에서 HTTP/S , STMP 등을 이용 하여 XML을 교환하기 위한 통신 규약
 ->WSDL 웹 서비스와 관련되 서식이나 프로토콜 등을 표준적인 방법으로 기술하고 게시하기 위한 언어
   XML과 JAVA 는 AJAX
   XML과 언어는 WSDL
   XML과 프로토콜은 SOAP

31. 소프트웨어 아키텍처(소프트웨어를 구성하는 요소들 간의 관계를 표현하는 시스템의 구조 또는 구조체 )
 - 추(상화), - 전체적이고 포괄적인 개념을 설계 후 차례로 세분화하여 구체화 
   모(듈화),  - 시스템의 기능들을 모듈 단위로 나누는 것
   단(계적분해),  - 상위의 개념 -> 하위의 개념으로 구체화시키는 분할기법
   정(보 은닉) - 모듈 내부에 포함된 절차와 자료들의 정보가 감추어져 다른 모듈이 접근 못하도록

32. 아키텍처 패턴 (아키텍처를 설계할 떄 참조할 수 있는 전형적인 해결 방식)
 - 파이프 -필터패턴 (데이터 스트림 절차의 각 단계를 필터로 캡슐화 하여 파이프를 통해 전송하는 패턴)
 - MVC 패턴 

33. 객체지향 (객클메 캡상다연)
 객체, 클래스, 메시지, 캡슐화, 상속, 다형성, 연관성

34. 객체지향 분석 및 설계 (사용자의 요구사항과 관련된 객체, 속성, 연산, 관계 등을 정의하여 모델링 하는 작업)
  - 럼바우 방법 (객동기) 
  - coad와 yourdon방법 ER다이어그램을 사용하여 객체 행위를 모델링함

--- 럼바우의 분석기법 - 모든 소프트웨어 구성요소를 그래픽 표기법을 이용하여 모델링 하는 기법
  - 객체 모델링 - 시스템 요구하는 객체 찾고 각 객체 간의 관계를 규정
  - 동적 모델링 - 상태다이어그램을 이용하여 시간의 흐름에 따른 모델링
  - 기능 모델링 - 자료흐름도(DFD)를 이용하여 다수의 프로세스들 간의 자료흐름을 중심으로 처리과정을 표현

35. 객체지향 설계 원칙 (변경이나 확장에 유연한 시스템을 설계하기 위해 지켜져야할 원칙) - 단 개 이 인 의
 - 단일 책임원칙(객체는 단 하나의 책임)
 - 개방 폐쇠원칙(기존의 코드를 변경없이 기능을 추가하도록 설계)
 - 리스코프 치환 원칙(자식클래스는 부모클래스의 기능을 수행 가능)
 - 인터페이스 분리 원칙(자신이 사용하지 않는 인터페이스와 의존관계를 맺거나 영향X)
 - 의존 역전 원칙 (의존관계 성립시 추상성이 높은 클래스와 의존관계를 맺어야함) 

36. 모듈
 - 결합도의 종류 강함(내공외제스자)약함
 내용 결합도 - 한 모듈이 다른 모듈의 내부 기능 자료를 직접 참조 수정
 공유 결합도 - 공유되는 공통 데이터영역을 여러 모듈이 사용
 외부 결합도 - 외부에서의 다른 묘듈에서 참조
 제어 결합도 - 논리적 흐름을 제어위해 신호나 제어요소를 전달
 스탬프 결합도 - 모듈간의 인터페이스로 배열이나 레코드 등의 자료구조 전달
 자료 결합도 - 인터페이스가 자료요소로만 구성됨

- 응집도의 종류 강함(기순교절 시논우)약함
 기능적응집도  - 모든 요소들이 단일 문제와 연관 수행
 순차적응집도 -  하나의 활동으로 나온 데이터를 다음 활동에서 입력
 교환적응집도 -  동일한 입력과 출력을 사용하여 다른 기능 수행
 절차적응집도 - 모듈안에 다수의 기능을 안에 구성요소들이 순차적으로 수행
 시간적 응집도 - 특정 시간에 처리
 논리적응집도 -  유사한 성격을 갖는
 우연적 응집도 - 서로 관련 없는 요소로

37. 단위 모듈
 IPC (모듈 간 통신 방식을 구현하기 위해 사용되는 대표적인 프로그래밍 인터페이스 집합)
 테스트케이스 (소프트웨어가 사용자의 요구사항을 정확하게 준수 했는지 )

38. 디자인패턴 (모듈간의 관계 및 인터페이스를 설계할 떄 참조할 수 있는 전형적인 해결 방식 또는 예제) 71섹션
  - 생성패턴, 구조패턴, 행위패턴
  생성패턴 추상팩토리, 빌더, 팩토리메소드, 프로토타입, 싱글톤, (프로토 팩토리는 추상적으로 혼자 지어짐)
  구조패턴 어댑터, 프록시, 브리지 (프브어)
  행위패턴  책임연쇄, 커맨드, 인터프리터, 반복자, 중재자, 메멘토, 옵서버, 상태, 전략, 템플릿메소드, 방문자 (책커인 반중 메옵상전)

39. 미들웨어 솔루션(운영체제와 응용프로그램 또는 서버와 클라이언트 사이에서 다양한 서비스를 제공하는 소프트웨어)
 미들웨어의 종류 (RMD TOW)
 RPC(원격 프로시저 호출) - 원격프로시저를 마치 로컬 로컬프로시저처럼 호출하는 미들웨어
 MOM(메시지 지향 미들웨어) - 비동기형 메시지를 전달하는 미들웨어
 DB - 클라이언트에서 원격의 데이터베이스와 연결하는 미들웨어
 TP-Monitor - 트랜잭션을 처리 및 감시하는 미들웨어
 ORB - 
 WAS - 동적인 콘텐츠를 처리하기 위한 미들웨어

40. 모듈연계를 위한 인터페이스 기능 식별 // 모듈연계(내부와 외부모듈간의 데이터의 교환을 위해 관계설정) // 80섹션
 - EAI  기업 내 각종 애플리케이션 및 플램폼 간의 정보 전달 상호 연동이 가능하게 해주는 솔루션 (PHMH)
   point to point, hub & spoke, message Bus, Hybrid (책 이미지 참조) 
 - ESB 애플리케이션 간 연계,데이터변환, 웹서비스 지원을 표준 기반의 인터페이스를 제공하는 솔루션
 - 웹서비스 네트워크의 정보를 표준화된 서비스 형태로 만들어 공유하는 기술 
  웹서비스의 구성 
SOAP - (http,https,smtp) 활용하여, xml기반의 메시지를 네트워크 상에서 교환
WSDL - XML, 프로토콜
UDDI  - WDSL을 등록하여 서비스와 서비스 제공자르 검색하고 접근
